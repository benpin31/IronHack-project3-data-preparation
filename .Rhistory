stat
colnames(stat) <- c(
"date",
"Physical",
"Telephone",
"Bar associatif",
"Doc associatives",
"Infos touristiques",
"Docs infos santé",
"activités Pôle Santé",
"Activités Pôle Culture",
"Autres activités",
"événements hors pôles",
"Activités des associations",
"Autres",
"timeRange"
)
stat <- stat[!is.na(timeRange)]
colnames(stat)
melt(stat, id.vars=c("date", "timeRange", "Physical", "Telephone"))[date == "02/01/2019"]
library(data.table)
# Import datas
stat <- data.table(read.csv("stat-2019.csv"))
# clean datas
getTimeRange <- function (timeRange1, timeRange2, timeRange3) {
if(!is.na(timeRange1) & timeRange1 == 1) {return("13h00 - 15h30")}
if(!is.na(timeRange2) & timeRange2 == 1) {return("15h30 - 18h00")}
if(!is.na(timeRange3) & timeRange3 == 1) {return("18h00 - 20h00")}
}
stat[, timeRange := getTimeRange(timeRange1, timeRange2, timeRange3), by=c("timeRange1", "timeRange2", "timeRange3")]
stat[, timeRange1:=NULL]
stat[, timeRange2:=NULL]
stat[, timeRange3:=NULL]
stat
colnames(stat) <- c(
"date",
"Physical",
"Telephone",
"Bar associatif",
"Doc associatives",
"Infos touristiques",
"Docs infos santé",
"activités Pôle Santé",
"Activités Pôle Culture",
"Autres activités",
"événements hors pôles",
"Activités des associations",
"Autres",
"timeRange"
)
stat <- stat[!is.na(timeRange)]
colnames(stat)
melt(stat, id.vars=c("date", "timeRange", "Physical", "Telephone"))[date == "02/01/2019"][order(timeRange)]
library(data.table)
# Import datas
stat <- data.table(read.csv("stat-2019.csv"))
# clean datas
getTimeRange <- function (timeRange1, timeRange2, timeRange3) {
if(!is.na(timeRange1) & timeRange1 == 1) {return("13h00 - 15h30")}
if(!is.na(timeRange2) & timeRange2 == 1) {return("15h30 - 18h00")}
if(!is.na(timeRange3) & timeRange3 == 1) {return("18h00 - 20h00")}
}
stat[, timeRange := getTimeRange(timeRange1, timeRange2, timeRange3), by=c("timeRange1", "timeRange2", "timeRange3")]
stat[, timeRange1:=NULL]
stat[, timeRange2:=NULL]
stat[, timeRange3:=NULL]
stat
colnames(stat) <- c(
"date",
"Physical",
"Telephone",
"Bar associatif",
"Doc associatives",
"Infos touristiques",
"Docs infos santé",
"activités Pôle Santé",
"Activités Pôle Culture",
"Autres activités",
"événements hors pôles",
"Activités des associations",
"Autres",
"timeRange"
)
stat <- stat[!is.na(timeRange)]
colnames(stat)
meltStat <- melt(stat, id.vars=c("date", "timeRange", "Physical", "Telephone"))[date == "02/01/2019"][order(timeRange)]
# Create JSON
toto <- unique(meltStat[, list("date, timeRange")])
library(data.table)
# Import datas
stat <- data.table(read.csv("stat-2019.csv"))
# clean datas
getTimeRange <- function (timeRange1, timeRange2, timeRange3) {
if(!is.na(timeRange1) & timeRange1 == 1) {return("13h00 - 15h30")}
if(!is.na(timeRange2) & timeRange2 == 1) {return("15h30 - 18h00")}
if(!is.na(timeRange3) & timeRange3 == 1) {return("18h00 - 20h00")}
}
stat[, timeRange := getTimeRange(timeRange1, timeRange2, timeRange3), by=c("timeRange1", "timeRange2", "timeRange3")]
stat[, timeRange1:=NULL]
stat[, timeRange2:=NULL]
stat[, timeRange3:=NULL]
stat
colnames(stat) <- c(
"date",
"Physical",
"Telephone",
"Bar associatif",
"Doc associatives",
"Infos touristiques",
"Docs infos santé",
"activités Pôle Santé",
"Activités Pôle Culture",
"Autres activités",
"événements hors pôles",
"Activités des associations",
"Autres",
"timeRange"
)
stat <- stat[!is.na(timeRange)]
colnames(stat)
meltStat <- melt(stat, id.vars=c("date", "timeRange", "Physical", "Telephone"))[date == "02/01/2019"][order(timeRange)]
# Create JSON
toto <- unique(meltStat[, list("date, timeRange")])
toto
library(data.table)
# Import datas
stat <- data.table(read.csv("stat-2019.csv"))
# clean datas
getTimeRange <- function (timeRange1, timeRange2, timeRange3) {
if(!is.na(timeRange1) & timeRange1 == 1) {return("13h00 - 15h30")}
if(!is.na(timeRange2) & timeRange2 == 1) {return("15h30 - 18h00")}
if(!is.na(timeRange3) & timeRange3 == 1) {return("18h00 - 20h00")}
}
stat[, timeRange := getTimeRange(timeRange1, timeRange2, timeRange3), by=c("timeRange1", "timeRange2", "timeRange3")]
stat[, timeRange1:=NULL]
stat[, timeRange2:=NULL]
stat[, timeRange3:=NULL]
stat
colnames(stat) <- c(
"date",
"Physical",
"Telephone",
"Bar associatif",
"Doc associatives",
"Infos touristiques",
"Docs infos santé",
"activités Pôle Santé",
"Activités Pôle Culture",
"Autres activités",
"événements hors pôles",
"Activités des associations",
"Autres",
"timeRange"
)
stat <- stat[!is.na(timeRange)]
colnames(stat)
meltStat <- melt(stat, id.vars=c("date", "timeRange", "Physical", "Telephone"))[date == "02/01/2019"][order(timeRange)]
# Create JSON
toto <- unique(meltStat[, c("date, timeRange")])
toto
library(data.table)
# Import datas
stat <- data.table(read.csv("stat-2019.csv"))
# clean datas
getTimeRange <- function (timeRange1, timeRange2, timeRange3) {
if(!is.na(timeRange1) & timeRange1 == 1) {return("13h00 - 15h30")}
if(!is.na(timeRange2) & timeRange2 == 1) {return("15h30 - 18h00")}
if(!is.na(timeRange3) & timeRange3 == 1) {return("18h00 - 20h00")}
}
stat[, timeRange := getTimeRange(timeRange1, timeRange2, timeRange3), by=c("timeRange1", "timeRange2", "timeRange3")]
stat[, timeRange1:=NULL]
stat[, timeRange2:=NULL]
stat[, timeRange3:=NULL]
stat
colnames(stat) <- c(
"date",
"Physical",
"Telephone",
"Bar associatif",
"Doc associatives",
"Infos touristiques",
"Docs infos santé",
"activités Pôle Santé",
"Activités Pôle Culture",
"Autres activités",
"événements hors pôles",
"Activités des associations",
"Autres",
"timeRange"
)
stat <- stat[!is.na(timeRange)]
colnames(stat)
meltStat <- melt(stat, id.vars=c("date", "timeRange", "Physical", "Telephone"))[date == "02/01/2019"][order(timeRange)]
# Create JSON
toto <- unique(meltStat[, list("date, timeRange")])
toto
library(data.table)
# Import datas
stat <- data.table(read.csv("stat-2019.csv"))
# clean datas
getTimeRange <- function (timeRange1, timeRange2, timeRange3) {
if(!is.na(timeRange1) & timeRange1 == 1) {return("13h00 - 15h30")}
if(!is.na(timeRange2) & timeRange2 == 1) {return("15h30 - 18h00")}
if(!is.na(timeRange3) & timeRange3 == 1) {return("18h00 - 20h00")}
}
stat[, timeRange := getTimeRange(timeRange1, timeRange2, timeRange3), by=c("timeRange1", "timeRange2", "timeRange3")]
stat[, timeRange1:=NULL]
stat[, timeRange2:=NULL]
stat[, timeRange3:=NULL]
stat
colnames(stat) <- c(
"date",
"Physical",
"Telephone",
"Bar associatif",
"Doc associatives",
"Infos touristiques",
"Docs infos santé",
"activités Pôle Santé",
"Activités Pôle Culture",
"Autres activités",
"événements hors pôles",
"Activités des associations",
"Autres",
"timeRange"
)
stat <- stat[!is.na(timeRange)]
colnames(stat)
meltStat <- melt(stat, id.vars=c("date", "timeRange", "Physical", "Telephone"))[date == "02/01/2019"][order(timeRange)]
meltStat
# Create JSON
toto <- unique(meltStat[, list("date, timeRange")])
toto
library(data.table)
# Import datas
stat <- data.table(read.csv("stat-2019.csv"))
# clean datas
getTimeRange <- function (timeRange1, timeRange2, timeRange3) {
if(!is.na(timeRange1) & timeRange1 == 1) {return("13h00 - 15h30")}
if(!is.na(timeRange2) & timeRange2 == 1) {return("15h30 - 18h00")}
if(!is.na(timeRange3) & timeRange3 == 1) {return("18h00 - 20h00")}
}
stat[, timeRange := getTimeRange(timeRange1, timeRange2, timeRange3), by=c("timeRange1", "timeRange2", "timeRange3")]
stat[, timeRange1:=NULL]
stat[, timeRange2:=NULL]
stat[, timeRange3:=NULL]
stat
colnames(stat) <- c(
"date",
"Physical",
"Telephone",
"Bar associatif",
"Doc associatives",
"Infos touristiques",
"Docs infos santé",
"activités Pôle Santé",
"Activités Pôle Culture",
"Autres activités",
"événements hors pôles",
"Activités des associations",
"Autres",
"timeRange"
)
stat <- stat[!is.na(timeRange)]
colnames(stat)
meltStat <- melt(stat, id.vars=c("date", "timeRange", "Physical", "Telephone"))[date == "02/01/2019"][order(timeRange)]
meltStat
# Create JSON
toto <- unique(meltStat[, date])
toto
library(data.table)
# Import datas
stat <- data.table(read.csv("stat-2019.csv"))
# clean datas
getTimeRange <- function (timeRange1, timeRange2, timeRange3) {
if(!is.na(timeRange1) & timeRange1 == 1) {return("13h00 - 15h30")}
if(!is.na(timeRange2) & timeRange2 == 1) {return("15h30 - 18h00")}
if(!is.na(timeRange3) & timeRange3 == 1) {return("18h00 - 20h00")}
}
stat[, timeRange := getTimeRange(timeRange1, timeRange2, timeRange3), by=c("timeRange1", "timeRange2", "timeRange3")]
stat[, timeRange1:=NULL]
stat[, timeRange2:=NULL]
stat[, timeRange3:=NULL]
stat
colnames(stat) <- c(
"date",
"Physical",
"Telephone",
"Bar associatif",
"Doc associatives",
"Infos touristiques",
"Docs infos santé",
"activités Pôle Santé",
"Activités Pôle Culture",
"Autres activités",
"événements hors pôles",
"Activités des associations",
"Autres",
"timeRange"
)
stat <- stat[!is.na(timeRange)]
colnames(stat)
meltStat <- melt(stat, id.vars=c("date", "timeRange", "Physical", "Telephone"))
meltStat
# Create JSON
toto <- unique(meltStat[, date])
toto
library(data.table)
# Import datas
stat <- data.table(read.csv("stat-2019.csv"))
# clean datas
getTimeRange <- function (timeRange1, timeRange2, timeRange3) {
if(!is.na(timeRange1) & timeRange1 == 1) {return("13h00 - 15h30")}
if(!is.na(timeRange2) & timeRange2 == 1) {return("15h30 - 18h00")}
if(!is.na(timeRange3) & timeRange3 == 1) {return("18h00 - 20h00")}
}
stat[, timeRange := getTimeRange(timeRange1, timeRange2, timeRange3), by=c("timeRange1", "timeRange2", "timeRange3")]
stat[, timeRange1:=NULL]
stat[, timeRange2:=NULL]
stat[, timeRange3:=NULL]
stat
colnames(stat) <- c(
"date",
"Physical",
"Telephone",
"Bar associatif",
"Doc associatives",
"Infos touristiques",
"Docs infos santé",
"activités Pôle Santé",
"Activités Pôle Culture",
"Autres activités",
"événements hors pôles",
"Activités des associations",
"Autres",
"timeRange"
)
stat <- stat[!is.na(timeRange)]
colnames(stat)
meltStat <- melt(stat, id.vars=c("date", "timeRange", "Physical", "Telephone"))
meltStat
# Create JSON
toto <- unique(meltStat[, date])
for (dateValue in unique(meltStat[, date])) {
for (timeRangeValue in unique(meltStat[date == dateValue, timeRange])) {
meltStat[date == dateValue & timeRange == timeRangeValue]
}
}
library(data.table)
# Import datas
stat <- data.table(read.csv("stat-2019.csv"))
# clean datas
getTimeRange <- function (timeRange1, timeRange2, timeRange3) {
if(!is.na(timeRange1) & timeRange1 == 1) {return("13h00 - 15h30")}
if(!is.na(timeRange2) & timeRange2 == 1) {return("15h30 - 18h00")}
if(!is.na(timeRange3) & timeRange3 == 1) {return("18h00 - 20h00")}
}
stat[, timeRange := getTimeRange(timeRange1, timeRange2, timeRange3), by=c("timeRange1", "timeRange2", "timeRange3")]
stat[, timeRange1:=NULL]
stat[, timeRange2:=NULL]
stat[, timeRange3:=NULL]
stat
colnames(stat) <- c(
"date",
"Physical",
"Telephone",
"Bar associatif",
"Doc associatives",
"Infos touristiques",
"Docs infos santé",
"activités Pôle Santé",
"Activités Pôle Culture",
"Autres activités",
"événements hors pôles",
"Activités des associations",
"Autres",
"timeRange"
)
stat <- stat[!is.na(timeRange)]
colnames(stat)
meltStat <- melt(stat, id.vars=c("date", "timeRange", "Physical", "Telephone"))
meltStat
# Create JSON
toto <- unique(meltStat[, date])
for (dateValue in unique(meltStat[, date])) {
for (timeRangeValue in unique(meltStat[date == dateValue, timeRange])) {
print(meltStat[date == dateValue & timeRange == timeRangeValue])
}
}
library(data.table)
# Import datas
stat <- data.table(read.csv("stat-2019.csv"))
# clean datas
getTimeRange <- function (timeRange1, timeRange2, timeRange3) {
if(!is.na(timeRange1) & timeRange1 == 1) {return("13h00 - 15h30")}
if(!is.na(timeRange2) & timeRange2 == 1) {return("15h30 - 18h00")}
if(!is.na(timeRange3) & timeRange3 == 1) {return("18h00 - 20h00")}
}
stat[, timeRange := getTimeRange(timeRange1, timeRange2, timeRange3), by=c("timeRange1", "timeRange2", "timeRange3")]
stat[, timeRange1:=NULL]
stat[, timeRange2:=NULL]
stat[, timeRange3:=NULL]
stat
library(data.table)
# Import datas
stat <- data.table(read.csv("stat-2019.csv"))
# clean datas
getTimeRange <- function (timeRange1, timeRange2, timeRange3) {
if(!is.na(timeRange1) & timeRange1 == 1) {return("13h00 - 15h30")}
if(!is.na(timeRange2) & timeRange2 == 1) {return("15h30 - 18h00")}
if(!is.na(timeRange3) & timeRange3 == 1) {return("18h00 - 20h00")}
}
stat[, timeRange := getTimeRange(timeRange1, timeRange2, timeRange3), by=c("timeRange1", "timeRange2", "timeRange3")]
stat[, timeRange1:=NULL]
stat[, timeRange2:=NULL]
stat[, timeRange3:=NULL]
colnames(stat) <- c(
"date",
"Physical",
"Telephone",
"Bar associatif",
"Doc associatives",
"Infos touristiques",
"Docs infos santé",
"activités Pôle Santé",
"Activités Pôle Culture",
"Autres activités",
"événements hors pôles",
"Activités des associations",
"Autres",
"timeRange"
)
stat
stat <- stat[!is.na(timeRange)]
colnames(stat)
meltStat <- melt(stat, id.vars=c("date", "timeRange", "Physical", "Telephone"))
meltStat
meltStat <- melt(stat, id.vars=c("date", "timeRange", "Physical", "Telephone"))[date == "02/01/2019"][order(timeRange)]
meltStat
rm(list=ls())
library(data.table)
# Import datas
stat <- data.table(read.csv("stat-2019.csv"))
# clean datas
getTimeRange <- function (timeRange1, timeRange2, timeRange3) {
if(!is.na(timeRange1) & timeRange1 == 1) {return("13h00 - 15h30")}
if(!is.na(timeRange2) & timeRange2 == 1) {return("15h30 - 18h00")}
if(!is.na(timeRange3) & timeRange3 == 1) {return("18h00 - 20h00")}
}
stat[, timeRange := getTimeRange(timeRange1, timeRange2, timeRange3), by=c("timeRange1", "timeRange2", "timeRange3")]
stat[, timeRange1:=NULL]
stat[, timeRange2:=NULL]
stat[, timeRange3:=NULL]
colnames(stat) <- c(
"date",
"Physical",
"Telephone",
"Bar associatif",
"Doc associatives",
"Infos touristiques",
"Docs infos santé",
"activités Pôle Santé",
"Activités Pôle Culture",
"Autres activités",
"événements hors pôles",
"Activités des associations",
"Autres",
"timeRange"
)
stat <- stat[!is.na(timeRange)]
meltStat <- as.data.table(melt(stat, id.vars=c("date", "timeRange", "Physical", "Telephone"))[!is.na(value)])
randomHour = function(timeRange, date) {
if(timeRange == "15h30 - 18h00") {
return(as.POSIXct(paste0(date, " 15:30"), format='%d/%m/%Y %H:%M') + runif(1, 0, 60*150))
}
if(timeRange == "13h00 - 15h30") {
return(as.POSIXct(paste0(date, " 13:00"), format='%d/%m/%Y %H:%M') + runif(1, 0, 60*150))
}
if(timeRange == "18h00 - 20h00") {
return(as.POSIXct(paste0(date, " 18:00"), format='%d/%m/%Y %H:%M') + runif(1, 0, 60*120))
}
}
# Create JSON
res = c()
for (dateValue in unique(meltStat[, date])) {
for (timeRangeValue in unique(meltStat[date == dateValue, timeRange])) {
segment <- meltStat[date == dateValue & timeRange == timeRangeValue]
nbPhys <- head(segment[, Physical],1)
nbTel <- head(segment[,Telephone], 1)
if (is.na(nbPhys)) {total<- nbTel ;telList <- 1:nbTel}
if (is.na(nbTel)) {total<- nbPhys ; telList <- c()}
if (!is.na(nbPhys) & !is.na(nbTel)) {total<- nbPhys+nbTel; telList <- sample(1:(nbPhys+nbTel), nbTel)}
cpt=1
for (k in 1:dim(segment)[1]) {
for (l in 1:segment[k, value]) {
if(cpt %in% telList) {
res <- rbind(res,  segment[k, list(variable, randomHour(timeRange, date), "Telephone"), by = c("timeRange", "date")] )
} else {
res <- rbind(res,  segment[k, list(variable, randomHour(timeRange, date), "Physical"), by = c("timeRange", "date")] )
}
cpt<-cpt+1
}
}
}
}
res <- res[,list(variable, V2, V3)]
colnames(res) <- c("category", "date", "contactType")
res[, seed := paste0("{category:'",category,"', date:'",date,"', contactType:'",contactType,"'}")]
querySeed <- paste0("[", paste(res[,seed], collapse=",\n"), "]")
write.txt(querySeed, "seed.txt")
write.txt(querySeed, file="seed.txt")
write.csv(querySeed, file="seed.txt")
